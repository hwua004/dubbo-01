<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!--给应用起一个名字，这个名字最好是和项目名称保持一致，不要和其他项目重复-->
    <dubbo:application name="dubbo-provider"/>

    <!--指定消费者调用服务者的时候，使用什么协议以及端口号-->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!--把服务的实现加入到spring的容器中-->
    <bean id="helloService" class="com.hwua.dubbo.serviceImpl.HelloServiceImpl"></bean>

    <!--按照dubbo的架构，服务者在启动的时候会向注册中心注册我们的服务，
    但是这里，先不引入注册中心
    interface:表示这个服务的接口是哪一个。如果系统中有多个服务需要提供的话，
    就要写多个<dubbo:service>标签
    ref指向的就是接口的真正实现，也就是服务的真正实现。并且这个实现类应该是在spring容器中的一个类
    registry：指定使用哪一种注册中心，如若是N/A表示暂时不适用注册中心
    -->
    <dubbo:service interface="com.hwua.dubbo.service.HelloService"
                   ref="helloService"
                   registry="N/A"/>

</beans>